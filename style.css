html,
body {
	color: #3a3a3b;
	font-family: 'Karla', sans-serif;
	/*Consider using an additional backup font between `Karla` and `san-serif`*/
	height: 100%;
}

body {
	display: flex;
	flex-direction: column;
	margin: 0;
	padding: 0 40px;
}

/*---------- header ----------*/
header {
	flex: 0 0 90px;
	border-bottom: 1px solid #eee;
}

ul {
	display: flex;
	align-items: center;
	list-style: none;
	padding: 0;
}

li {
	padding: 20px 10px;
	width: 120px;
}

button {
	color: #fff;
	background: #cd6155;
	border: 0;
	border-radius: 4px;
	cursor: pointer;
	font-family: 'Karla', sans-serif;
	font-size: 16px;
	outline: none;
	padding: 8px 16px;
}

button:hover {
	background: #d8786f;
	color: #fff;
}

header button {
	background: #fff;
	border: 1px solid #3a3a3b;
	color: #3a3a3b;
}

header button:hover {
	border: 1px solid #d8786f;
}

.game-info {
	letter-spacing: 1px;
	text-transform: uppercase;
}

.site-logo {
	font-size: 2vw;
	/*I think it makes sense to make the font-size here fixed, since the title is the only thing that is changing sizes when the page gets smaller*/
	/*Also, consider calling this `title` instead or even better, just using a heading*/
	font-weight: 700;
	margin-left: auto;
	margin-right: auto;
	width: auto;
}

/*---------- main ----------*/
main {
	flex: 1 0 auto;
	display: flex;
	flex-direction: column;
}

#user-message {
	font-size: 12px;
	letter-spacing: 1px;
	text-align: center;
	text-transform: uppercase;
	padding: 30px;
}

/*---------- start page ----------*/
.welcome-message {
	font-size: 40px;
	margin-top: 40px;
}

.level-buttons button {
	font-size: 20px;
	font-weight: 400;
	margin: 80px 30px;
	padding: 10px 26px;
}

/*---------- game board ----------*/
#game-board {
	flex: 1 0 0;
	display: flex;
	flex-direction: row;
	flex-wrap: nowrap;
	align-items: center;
	justify-content: center;
	margin-top: 80px;
	padding: 0 30px;
}

.the-sentence-pos {
	flex: 0 0 25%;
	display: flex;
	flex-direction: column;
	justify-content: center;
	margin: 10px 5px;
	text-align: center;
}

.word-tile {
	flex: 1 0 auto;
	display: flex;
	flex-direction: column;
	justify-content: center;
	height: 120px;
	margin: 10px 0;
}

.the-sentence-pos-label,
.wb-pos-label {
	font-size: 14px;
	letter-spacing: 1px;
	padding: 10px 0;
	text-transform: uppercase;
}

.the-sentence-pos-label {
	flex: 0 0 20px;
	border-top: 1px solid #eee;
	height: 20px;
}

.word-info {
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: center;
}

.word-pinyin,
.word-en {
	flex: 1 1 0;
}

.word-cn {
	flex: 2 1 0;
	font-size: 40px;
	letter-spacing: 6px;
}

/*---------- word bank ----------*/
#word-bank {
	flex: 2 0 0;
	display: flex;
	flex-direction: row;
	justify-content: center;
	margin-top: 20px;
	padding: 20px;
}

.wb-pos {
	/* dynamically update % based on number of pos */
	flex: 0 0 50%;
	display: flex;
	flex-direction: column;
	padding: 0;
	text-align: center;
}

.wb-pos-label {
	flex: 1 0 20px;
	border-top: 2px solid #eee;
}

.wb-tiles {
	flex: 9 0 0;
	display: flex;
	flex-flow: row wrap;
	align-items: center;
	align-content: flex-start;
	justify-content: center;
	box-sizing: border-box;
}

.wb-tile {
	flex: 1 1 80px;
	display: flex;
	align-items: center;
	justify-content: center;
	border: 1px solid #eee;
	box-sizing: border-box;
	cursor: pointer;
	font-size: 1.8vw;
	letter-spacing: 6px;
	margin: 10px 20px;
}

.wb-tile:hover {
	color: #fff;
	background: #cd6155;
}

/*Good job keeping things well organized and easy to read.  You've chosen good semantic class/id names to make things intuitive to understand.  Typically with CSS you'll want to go from least specific at the top to most specific at the bottom, so (elements, then classes, then ids).  However, since you've provided commented titles, this is also an acceptable way to do it.  For larger CSS files, and yours is starting to verge in that territory, consider breaking up the sections (header, main, wordbank, etc) into their own seperate CSS files.*/

/*Sizing is good to a point.  Nice work making use of flex-box.  For more dynamic sizing, look into using *media queries* that can reformat and apply different CSS rules when your page gets smaller than a certain size.  https://www.w3schools.com/css/css_rwd_mediaqueries.asp  This could really help your page when it the screen size becomes small. */

/*Aesthetically speaking, you've done a great job choosing the color palette, using rounded buttons, making use of `hover`, and chosing suitable font styling and size.  Consider adding a small transition time when user hovers over a button.  Page is pleasing to look at, easy to understand what's going on, and not too busy. */
